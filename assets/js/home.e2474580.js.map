{"version":3,"file":"js/home.e2474580.js","mappings":"yJAKAA,OAAOC,SAASC,iBAAiB,oBAAoB,WACjD,MAAMC,EAAYF,SAASG,cAAc,eACzC,IAAIC,EAAO,GACPC,EAAO,GAEX,GAAIH,EAAW,CACEF,SAASM,gBAEtB,IACIC,EADAC,GAAe,EAInB,SAASC,EAAoBC,EAAGC,GAC5BX,SAASM,gBAAgBM,MAAMC,YAAY,YAAc,GAAEH,MAC3DV,SAASM,gBAAgBM,MAAMC,YAAY,YAAc,GAAEF,KAC/D,CAGA,IAKIG,EALAC,EAAUX,EACVY,EAAUX,EACVY,EAAK,GACLC,EAAK,IAGLC,GAAc,EAElB,SAASC,IACDD,IACJA,GAAc,EAEdL,EAAeO,aAAY,KACvBN,GAAWE,EACXD,GAAWE,GAEPH,GAAW,GAAKA,GAAW,OAAKE,IAAO,IACvCD,GAAW,GAAKA,GAAW,OAAKE,IAAO,GAE3CT,EAAoBM,EAASC,EAAQ,GACtC,IAAO,IACd,CAEA,SAASM,IACLC,cAAcT,GACdK,GAAc,CAClB,CAEA,SAASK,IACLC,aAAalB,GACbA,EAAoBmB,YAAW,KACtB1B,SAAS2B,SACVnB,GAAe,EACfY,IACJ,GACD,IACP,CAGApB,SAASC,iBAAiB,oBAAoB,KACtCD,SAAS2B,OACTL,IACQd,GACRY,GACJ,IAIJlB,EAAUD,iBAAiB,eAAgB2B,IACvC,MAAMC,EAAO3B,EAAU4B,wBACjBpB,GAAMkB,EAAEG,QAAUF,EAAKG,MAAQH,EAAKI,MAAS,IAC7CtB,GAAMiB,EAAEM,QAAUL,EAAKM,KAAON,EAAKO,OAAU,IAE9C5B,GACDc,IAGJd,GAAe,EACfJ,EAAOM,EACPL,EAAOM,EACPI,EAAUL,EACVM,EAAUL,EACVF,EAAoBC,EAAGC,GACvBa,GAAsB,IAI1Bf,EAAoB,GAAI,IAExBe,GACJ,CAIA,IAD2BxB,SAASqC,iBAAiB,+BAC7BC,KAAIC,GAAoB,IAAIC,EAAAA,QAAQD,KChG5DE,QAAQC,IAAI,yGDmGhB,G","sources":["webpack://python-webpack-boilerplate/./src/application/home.js","webpack://python-webpack-boilerplate/./src/components/msgs.js"],"sourcesContent":["import \"../styles/index.scss\";\nimport {Tooltip} from \"bootstrap/dist/js/bootstrap.bundle\";\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport {on_market} from \"../components/msgs\";\n\nwindow.document.addEventListener(\"DOMContentLoaded\", function () {\n    const container = document.querySelector('#homeHeader');\n    let sl_x = 60;\n    let sl_y = 40;\n\n    if (container) {\n        const root = document.documentElement;\n\n        let isUserActive = true;\n        let inactivityTimeout;\n\n        // Set spotlight position using CSS variables\n        function updateMousePosition(x, y) {\n            document.documentElement.style.setProperty('--mouse-x', `${x}%`);\n            document.documentElement.style.setProperty('--mouse-y', `${y}%`);\n        }\n\n        // Animate spotlight on idle (circular path)\n        let bounceX = sl_x;\n        let bounceY = sl_y;\n        let dx = 0.3;\n        let dy = 0.25;\n\n        let idleInterval;\n        let isAnimating = false;\n\n        function startIdleAnimation() {\n            if (isAnimating) return;\n            isAnimating = true;\n\n            idleInterval = setInterval(() => {\n                bounceX += dx;\n                bounceY += dy;\n\n                if (bounceX <= 0 || bounceX >= 100) dx *= -1;\n                if (bounceY <= 0 || bounceY >= 100) dy *= -1;\n\n                updateMousePosition(bounceX, bounceY);\n            }, 1000 / 15); // 15 FPS\n        }\n\n        function stopIdleAnimation() {\n            clearInterval(idleInterval);\n            isAnimating = false;\n        }\n\n        function resetInactivityTimer() {\n            clearTimeout(inactivityTimeout);\n            inactivityTimeout = setTimeout(() => {\n                if (!document.hidden) {\n                    isUserActive = false;\n                    startIdleAnimation();\n                }\n            }, 1000);\n        }\n\n        // Stop animation when tab is hidden\n        document.addEventListener('visibilitychange', () => {\n            if (document.hidden) {\n                stopIdleAnimation();\n            } else if (!isUserActive) {\n                startIdleAnimation();\n            }\n        });\n\n        // User interaction resets idle state\n        container.addEventListener('pointermove', (e) => {\n            const rect = container.getBoundingClientRect();\n            const x = ((e.clientX - rect.left) / rect.width) * 100;\n            const y = ((e.clientY - rect.top) / rect.height) * 100;\n\n            if (!isUserActive) {\n                stopIdleAnimation();\n            }\n\n            isUserActive = true;\n            sl_x = x;\n            sl_y = y;\n            bounceX = x;\n            bounceY = y;\n            updateMousePosition(x, y);\n            resetInactivityTimer();\n        });\n\n        // Initialize\n        updateMousePosition(60, 40);\n        // animateIdleSpotlight(performance.now());\n        resetInactivityTimer();\n    }\n\n    // enable tooltips\n    const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\n    [...tooltipTriggerList].map(tooltipTriggerEl => new Tooltip(tooltipTriggerEl));\n\n    on_market();\n});\n","function on_market() {\n    console.log(\"Li is on the market! If you have or you know job openings that fit Li's skill set, please let me know!\");\n}\n\nexport {on_market};"],"names":["window","document","addEventListener","container","querySelector","sl_x","sl_y","documentElement","inactivityTimeout","isUserActive","updateMousePosition","x","y","style","setProperty","idleInterval","bounceX","bounceY","dx","dy","isAnimating","startIdleAnimation","setInterval","stopIdleAnimation","clearInterval","resetInactivityTimer","clearTimeout","setTimeout","hidden","e","rect","getBoundingClientRect","clientX","left","width","clientY","top","height","querySelectorAll","map","tooltipTriggerEl","Tooltip","console","log"],"sourceRoot":""}